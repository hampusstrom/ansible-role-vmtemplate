---
# tasks file for vmtemplate
- name: Set timezone.
  ansible.builtin.timezone:
    name: "{{ vmtemplate_timezone }}"

- name: Install guest tools.
  ansible.builtin.include_tasks:
    file: "{{ ansible_virtualization_type | lower }}-guest-util.yml"
  when: ansible_virtualization_role == "guest"

- name: "Set generic hostname."
  ansible.builtin.hostname:
    name: localhost.localdomain
  when: ansible_virtualization_type != 'docker' # We can't change hostname of a running docker container (molecule)

- name: Enable ssh root login.
  ansible.builtin.lineinfile:
    path: /etc/ssh/sshd_config
    line: PermitRootLogin yes
    regexp: ^PermitRootLogin
  notify: restart sshd

- name: Flush handlers.
  ansible.builtin.meta: flush_handlers

- name: Switch to the root user.
  ansible.builtin.set_fact:
    previous_ssh_user: "{{ ansible_user | default(ansible_facts.user_id) }}"
    ansible_ssh_user: root
    ansible_user: root

- name: Reboot host
  ansible.builtin.reboot:

- name: Print previous_ssh_user
  ansible.builtin.debug:
    var: previous_ssh_user

- name: Delete user {{ previous_ssh_user }}.
  ansible.builtin.user:
    name: "{{ previous_ssh_user }}"
    state: absent
  when: previous_ssh_user != 'root'

- name: Disable ssh root login.
  ansible.builtin.lineinfile:
    path: /etc/ssh/sshd_config
    line: PermitRootLogin no
    regexp: ^PermitRootLogin

- name: Generate root password if not provided.
  ansible.builtin.set_fact:
    vmtemplate_root_pass: "{{ lookup('ansible.builtin.password', '/dev/null chars=ascii_letters length=32') }}"
  when: vmtemplate_root_pass is not defined or vmtemplate_root_pass == ''
  no_log: true

- name: Set root password.
  ansible.builtin.user:
    name: "root"
    password: "{{ vmtemplate_root_pass }}"
  no_log: true

- name: Unconfigure Guest
  ansible.builtin.include_tasks:
    file: "{{ ansible_os_family | lower }}.yml"

- name: Shutdown guest.
  community.general.shutdown:
  when: ansible_virtualization_type != 'docker' # We shouldn't shutdown a docker container from within.